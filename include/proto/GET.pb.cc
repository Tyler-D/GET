// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GET.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GET.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace GET {

namespace {

const ::google::protobuf::Descriptor* TaskParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskParam_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskParam_DataPosition_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* TaskParam_TaskType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AddParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubParam_reflection_ = NULL;
const ::google::protobuf::Descriptor* MulParam_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MulParam_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_GET_2eproto() {
  protobuf_AddDesc_GET_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "GET.proto");
  GOOGLE_CHECK(file != NULL);
  TaskParam_descriptor_ = file->message_type(0);
  static const int TaskParam_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, source_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, sourcef_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, sourcem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, result_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, resultf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, resultm_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, add_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, sub_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, mul_param_),
  };
  TaskParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskParam_descriptor_,
      TaskParam::default_instance_,
      TaskParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskParam));
  TaskParam_DataPosition_descriptor_ = TaskParam_descriptor_->enum_type(0);
  TaskParam_TaskType_descriptor_ = TaskParam_descriptor_->enum_type(1);
  AddParam_descriptor_ = file->message_type(1);
  static const int AddParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddParam, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddParam, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddParam, channels_),
  };
  AddParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AddParam_descriptor_,
      AddParam::default_instance_,
      AddParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AddParam));
  SubParam_descriptor_ = file->message_type(2);
  static const int SubParam_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubParam, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubParam, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubParam, channels_),
  };
  SubParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubParam_descriptor_,
      SubParam::default_instance_,
      SubParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubParam));
  MulParam_descriptor_ = file->message_type(3);
  static const int MulParam_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, height_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, width_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, height_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, width_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, channels_),
  };
  MulParam_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MulParam_descriptor_,
      MulParam::default_instance_,
      MulParam_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MulParam, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MulParam));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_GET_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskParam_descriptor_, &TaskParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AddParam_descriptor_, &AddParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubParam_descriptor_, &SubParam::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MulParam_descriptor_, &MulParam::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_GET_2eproto() {
  delete TaskParam::default_instance_;
  delete TaskParam_reflection_;
  delete AddParam::default_instance_;
  delete AddParam_reflection_;
  delete SubParam::default_instance_;
  delete SubParam_reflection_;
  delete MulParam::default_instance_;
  delete MulParam_reflection_;
}

void protobuf_AddDesc_GET_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tGET.proto\022\003GET\"\276\003\n\tTaskParam\0228\n\nsource"
    "_pos\030\001 \001(\0162\033.GET.TaskParam.DataPosition:"
    "\007HOSTMEM\022\017\n\007sourcef\030\002 \003(\t\022\017\n\007sourcem\030\003 \003"
    "(\004\0228\n\nresult_pos\030\004 \001(\0162\033.GET.TaskParam.D"
    "ataPosition:\007HOSTMEM\022\017\n\007resultf\030\005 \003(\t\022\017\n"
    "\007resultm\030\006 \003(\004\022%\n\004type\030\007 \001(\0162\027.GET.TaskP"
    "aram.TaskType\022 \n\tadd_param\030\010 \001(\0132\r.GET.A"
    "ddParam\022 \n\tsub_param\030\t \001(\0132\r.GET.SubPara"
    "m\022 \n\tmul_param\030\n \001(\0132\r.GET.MulParam\"%\n\014D"
    "ataPosition\022\010\n\004FILE\020\000\022\013\n\007HOSTMEM\020\001\"E\n\010Ta"
    "skType\022\007\n\003ADD\020\000\022\007\n\003SUB\020\001\022\t\n\005MULTI\020\002\022\017\n\013C"
    "ONVOLUTION\020\003\022\013\n\007POOLING\020\004\">\n\010AddParam\022\016\n"
    "\006height\030\001 \001(\005\022\r\n\005width\030\002 \001(\005\022\023\n\010channels"
    "\030\003 \001(\005:\0011\">\n\010SubParam\022\016\n\006height\030\001 \001(\005\022\r\n"
    "\005width\030\002 \001(\005\022\023\n\010channels\030\003 \001(\005:\0011\"e\n\010Mul"
    "Param\022\020\n\010height_A\030\001 \001(\005\022\017\n\007width_A\030\002 \001(\005"
    "\022\020\n\010height_B\030\003 \001(\005\022\017\n\007width_B\030\004 \001(\005\022\023\n\010c"
    "hannels\030\005 \001(\005:\0011", 696);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GET.proto", &protobuf_RegisterTypes);
  TaskParam::default_instance_ = new TaskParam();
  AddParam::default_instance_ = new AddParam();
  SubParam::default_instance_ = new SubParam();
  MulParam::default_instance_ = new MulParam();
  TaskParam::default_instance_->InitAsDefaultInstance();
  AddParam::default_instance_->InitAsDefaultInstance();
  SubParam::default_instance_->InitAsDefaultInstance();
  MulParam::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_GET_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_GET_2eproto {
  StaticDescriptorInitializer_GET_2eproto() {
    protobuf_AddDesc_GET_2eproto();
  }
} static_descriptor_initializer_GET_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* TaskParam_DataPosition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskParam_DataPosition_descriptor_;
}
bool TaskParam_DataPosition_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TaskParam_DataPosition TaskParam::FILE;
const TaskParam_DataPosition TaskParam::HOSTMEM;
const TaskParam_DataPosition TaskParam::DataPosition_MIN;
const TaskParam_DataPosition TaskParam::DataPosition_MAX;
const int TaskParam::DataPosition_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* TaskParam_TaskType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskParam_TaskType_descriptor_;
}
bool TaskParam_TaskType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const TaskParam_TaskType TaskParam::ADD;
const TaskParam_TaskType TaskParam::SUB;
const TaskParam_TaskType TaskParam::MULTI;
const TaskParam_TaskType TaskParam::CONVOLUTION;
const TaskParam_TaskType TaskParam::POOLING;
const TaskParam_TaskType TaskParam::TaskType_MIN;
const TaskParam_TaskType TaskParam::TaskType_MAX;
const int TaskParam::TaskType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int TaskParam::kSourcePosFieldNumber;
const int TaskParam::kSourcefFieldNumber;
const int TaskParam::kSourcemFieldNumber;
const int TaskParam::kResultPosFieldNumber;
const int TaskParam::kResultfFieldNumber;
const int TaskParam::kResultmFieldNumber;
const int TaskParam::kTypeFieldNumber;
const int TaskParam::kAddParamFieldNumber;
const int TaskParam::kSubParamFieldNumber;
const int TaskParam::kMulParamFieldNumber;
#endif  // !_MSC_VER

TaskParam::TaskParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskParam::InitAsDefaultInstance() {
  add_param_ = const_cast< ::GET::AddParam*>(&::GET::AddParam::default_instance());
  sub_param_ = const_cast< ::GET::SubParam*>(&::GET::SubParam::default_instance());
  mul_param_ = const_cast< ::GET::MulParam*>(&::GET::MulParam::default_instance());
}

TaskParam::TaskParam(const TaskParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskParam::SharedCtor() {
  _cached_size_ = 0;
  source_pos_ = 1;
  result_pos_ = 1;
  type_ = 0;
  add_param_ = NULL;
  sub_param_ = NULL;
  mul_param_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskParam::~TaskParam() {
  SharedDtor();
}

void TaskParam::SharedDtor() {
  if (this != default_instance_) {
    delete add_param_;
    delete sub_param_;
    delete mul_param_;
  }
}

void TaskParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskParam_descriptor_;
}

const TaskParam& TaskParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GET_2eproto();
  return *default_instance_;
}

TaskParam* TaskParam::default_instance_ = NULL;

TaskParam* TaskParam::New() const {
  return new TaskParam;
}

void TaskParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    source_pos_ = 1;
    result_pos_ = 1;
    type_ = 0;
    if (has_add_param()) {
      if (add_param_ != NULL) add_param_->::GET::AddParam::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_sub_param()) {
      if (sub_param_ != NULL) sub_param_->::GET::SubParam::Clear();
    }
    if (has_mul_param()) {
      if (mul_param_ != NULL) mul_param_->::GET::MulParam::Clear();
    }
  }
  sourcef_.Clear();
  sourcem_.Clear();
  resultf_.Clear();
  resultm_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GET::TaskParam_DataPosition_IsValid(value)) {
            set_source_pos(static_cast< ::GET::TaskParam_DataPosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sourcef;
        break;
      }

      // repeated string sourcef = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sourcef:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sourcef()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sourcef(this->sourcef_size() - 1).data(),
            this->sourcef(this->sourcef_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sourcef;
        if (input->ExpectTag(24)) goto parse_sourcem;
        break;
      }

      // repeated uint64 sourcem = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sourcem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_sourcem())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_sourcem())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sourcem;
        if (input->ExpectTag(32)) goto parse_result_pos;
        break;
      }

      // optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result_pos:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GET::TaskParam_DataPosition_IsValid(value)) {
            set_result_pos(static_cast< ::GET::TaskParam_DataPosition >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_resultf;
        break;
      }

      // repeated string resultf = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resultf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_resultf()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resultf(this->resultf_size() - 1).data(),
            this->resultf(this->resultf_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_resultf;
        if (input->ExpectTag(48)) goto parse_resultm;
        break;
      }

      // repeated uint64 resultm = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_resultm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 48, input, this->mutable_resultm())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_resultm())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_resultm;
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }

      // optional .GET.TaskParam.TaskType type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::GET::TaskParam_TaskType_IsValid(value)) {
            set_type(static_cast< ::GET::TaskParam_TaskType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_add_param;
        break;
      }

      // optional .GET.AddParam add_param = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_add_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_add_param()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_sub_param;
        break;
      }

      // optional .GET.SubParam sub_param = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sub_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sub_param()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_mul_param;
        break;
      }

      // optional .GET.MulParam mul_param = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mul_param:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mul_param()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
  if (has_source_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->source_pos(), output);
  }

  // repeated string sourcef = 2;
  for (int i = 0; i < this->sourcef_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->sourcef(i).data(), this->sourcef(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->sourcef(i), output);
  }

  // repeated uint64 sourcem = 3;
  for (int i = 0; i < this->sourcem_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->sourcem(i), output);
  }

  // optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
  if (has_result_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->result_pos(), output);
  }

  // repeated string resultf = 5;
  for (int i = 0; i < this->resultf_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->resultf(i).data(), this->resultf(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->resultf(i), output);
  }

  // repeated uint64 resultm = 6;
  for (int i = 0; i < this->resultm_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      6, this->resultm(i), output);
  }

  // optional .GET.TaskParam.TaskType type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->type(), output);
  }

  // optional .GET.AddParam add_param = 8;
  if (has_add_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->add_param(), output);
  }

  // optional .GET.SubParam sub_param = 9;
  if (has_sub_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->sub_param(), output);
  }

  // optional .GET.MulParam mul_param = 10;
  if (has_mul_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->mul_param(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
  if (has_source_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->source_pos(), target);
  }

  // repeated string sourcef = 2;
  for (int i = 0; i < this->sourcef_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sourcef(i).data(), this->sourcef(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->sourcef(i), target);
  }

  // repeated uint64 sourcem = 3;
  for (int i = 0; i < this->sourcem_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->sourcem(i), target);
  }

  // optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
  if (has_result_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->result_pos(), target);
  }

  // repeated string resultf = 5;
  for (int i = 0; i < this->resultf_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resultf(i).data(), this->resultf(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->resultf(i), target);
  }

  // repeated uint64 resultm = 6;
  for (int i = 0; i < this->resultm_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(6, this->resultm(i), target);
  }

  // optional .GET.TaskParam.TaskType type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->type(), target);
  }

  // optional .GET.AddParam add_param = 8;
  if (has_add_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->add_param(), target);
  }

  // optional .GET.SubParam sub_param = 9;
  if (has_sub_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->sub_param(), target);
  }

  // optional .GET.MulParam mul_param = 10;
  if (has_mul_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->mul_param(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
    if (has_source_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_pos());
    }

    // optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
    if (has_result_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result_pos());
    }

    // optional .GET.TaskParam.TaskType type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .GET.AddParam add_param = 8;
    if (has_add_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->add_param());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .GET.SubParam sub_param = 9;
    if (has_sub_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_param());
    }

    // optional .GET.MulParam mul_param = 10;
    if (has_mul_param()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mul_param());
    }

  }
  // repeated string sourcef = 2;
  total_size += 1 * this->sourcef_size();
  for (int i = 0; i < this->sourcef_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sourcef(i));
  }

  // repeated uint64 sourcem = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->sourcem_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->sourcem(i));
    }
    total_size += 1 * this->sourcem_size() + data_size;
  }

  // repeated string resultf = 5;
  total_size += 1 * this->resultf_size();
  for (int i = 0; i < this->resultf_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->resultf(i));
  }

  // repeated uint64 resultm = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->resultm_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->resultm(i));
    }
    total_size += 1 * this->resultm_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskParam::MergeFrom(const TaskParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  sourcef_.MergeFrom(from.sourcef_);
  sourcem_.MergeFrom(from.sourcem_);
  resultf_.MergeFrom(from.resultf_);
  resultm_.MergeFrom(from.resultm_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_source_pos()) {
      set_source_pos(from.source_pos());
    }
    if (from.has_result_pos()) {
      set_result_pos(from.result_pos());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_add_param()) {
      mutable_add_param()->::GET::AddParam::MergeFrom(from.add_param());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_sub_param()) {
      mutable_sub_param()->::GET::SubParam::MergeFrom(from.sub_param());
    }
    if (from.has_mul_param()) {
      mutable_mul_param()->::GET::MulParam::MergeFrom(from.mul_param());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskParam::CopyFrom(const TaskParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskParam::IsInitialized() const {

  return true;
}

void TaskParam::Swap(TaskParam* other) {
  if (other != this) {
    std::swap(source_pos_, other->source_pos_);
    sourcef_.Swap(&other->sourcef_);
    sourcem_.Swap(&other->sourcem_);
    std::swap(result_pos_, other->result_pos_);
    resultf_.Swap(&other->resultf_);
    resultm_.Swap(&other->resultm_);
    std::swap(type_, other->type_);
    std::swap(add_param_, other->add_param_);
    std::swap(sub_param_, other->sub_param_);
    std::swap(mul_param_, other->mul_param_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskParam_descriptor_;
  metadata.reflection = TaskParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AddParam::kHeightFieldNumber;
const int AddParam::kWidthFieldNumber;
const int AddParam::kChannelsFieldNumber;
#endif  // !_MSC_VER

AddParam::AddParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AddParam::InitAsDefaultInstance() {
}

AddParam::AddParam(const AddParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AddParam::SharedCtor() {
  _cached_size_ = 0;
  height_ = 0;
  width_ = 0;
  channels_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AddParam::~AddParam() {
  SharedDtor();
}

void AddParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AddParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddParam_descriptor_;
}

const AddParam& AddParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GET_2eproto();
  return *default_instance_;
}

AddParam* AddParam::default_instance_ = NULL;

AddParam* AddParam::New() const {
  return new AddParam;
}

void AddParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    height_ = 0;
    width_ = 0;
    channels_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AddParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 height = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_width;
        break;
      }

      // optional int32 width = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_channels;
        break;
      }

      // optional int32 channels = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channels_)));
          set_has_channels();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AddParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->height(), output);
  }

  // optional int32 width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // optional int32 channels = 3 [default = 1];
  if (has_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channels(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AddParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->height(), target);
  }

  // optional int32 width = 2;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // optional int32 channels = 3 [default = 1];
  if (has_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channels(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AddParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 height = 1;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional int32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 channels = 3 [default = 1];
    if (has_channels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channels());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AddParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AddParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AddParam::MergeFrom(const AddParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_channels()) {
      set_channels(from.channels());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AddParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddParam::CopyFrom(const AddParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddParam::IsInitialized() const {

  return true;
}

void AddParam::Swap(AddParam* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(width_, other->width_);
    std::swap(channels_, other->channels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AddParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddParam_descriptor_;
  metadata.reflection = AddParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SubParam::kHeightFieldNumber;
const int SubParam::kWidthFieldNumber;
const int SubParam::kChannelsFieldNumber;
#endif  // !_MSC_VER

SubParam::SubParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SubParam::InitAsDefaultInstance() {
}

SubParam::SubParam(const SubParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SubParam::SharedCtor() {
  _cached_size_ = 0;
  height_ = 0;
  width_ = 0;
  channels_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubParam::~SubParam() {
  SharedDtor();
}

void SubParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubParam_descriptor_;
}

const SubParam& SubParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GET_2eproto();
  return *default_instance_;
}

SubParam* SubParam::default_instance_ = NULL;

SubParam* SubParam::New() const {
  return new SubParam;
}

void SubParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    height_ = 0;
    width_ = 0;
    channels_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 height = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
          set_has_height();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_width;
        break;
      }

      // optional int32 width = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
          set_has_width();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_channels;
        break;
      }

      // optional int32 channels = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channels_)));
          set_has_channels();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SubParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->height(), output);
  }

  // optional int32 width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // optional int32 channels = 3 [default = 1];
  if (has_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channels(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SubParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->height(), target);
  }

  // optional int32 width = 2;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // optional int32 channels = 3 [default = 1];
  if (has_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channels(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SubParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 height = 1;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height());
    }

    // optional int32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width());
    }

    // optional int32 channels = 3 [default = 1];
    if (has_channels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channels());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubParam::MergeFrom(const SubParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
    if (from.has_channels()) {
      set_channels(from.channels());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubParam::CopyFrom(const SubParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubParam::IsInitialized() const {

  return true;
}

void SubParam::Swap(SubParam* other) {
  if (other != this) {
    std::swap(height_, other->height_);
    std::swap(width_, other->width_);
    std::swap(channels_, other->channels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubParam_descriptor_;
  metadata.reflection = SubParam_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MulParam::kHeightAFieldNumber;
const int MulParam::kWidthAFieldNumber;
const int MulParam::kHeightBFieldNumber;
const int MulParam::kWidthBFieldNumber;
const int MulParam::kChannelsFieldNumber;
#endif  // !_MSC_VER

MulParam::MulParam()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MulParam::InitAsDefaultInstance() {
}

MulParam::MulParam(const MulParam& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MulParam::SharedCtor() {
  _cached_size_ = 0;
  height_a_ = 0;
  width_a_ = 0;
  height_b_ = 0;
  width_b_ = 0;
  channels_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MulParam::~MulParam() {
  SharedDtor();
}

void MulParam::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MulParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MulParam::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MulParam_descriptor_;
}

const MulParam& MulParam::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_GET_2eproto();
  return *default_instance_;
}

MulParam* MulParam::default_instance_ = NULL;

MulParam* MulParam::New() const {
  return new MulParam;
}

void MulParam::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    height_a_ = 0;
    width_a_ = 0;
    height_b_ = 0;
    width_b_ = 0;
    channels_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MulParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 height_A = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_a_)));
          set_has_height_a();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_width_A;
        break;
      }

      // optional int32 width_A = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width_A:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_a_)));
          set_has_width_a();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_height_B;
        break;
      }

      // optional int32 height_B = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_height_B:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_b_)));
          set_has_height_b();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_width_B;
        break;
      }

      // optional int32 width_B = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_width_B:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_b_)));
          set_has_width_b();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_channels;
        break;
      }

      // optional int32 channels = 5 [default = 1];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channels_)));
          set_has_channels();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MulParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 height_A = 1;
  if (has_height_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->height_a(), output);
  }

  // optional int32 width_A = 2;
  if (has_width_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width_a(), output);
  }

  // optional int32 height_B = 3;
  if (has_height_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->height_b(), output);
  }

  // optional int32 width_B = 4;
  if (has_width_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->width_b(), output);
  }

  // optional int32 channels = 5 [default = 1];
  if (has_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->channels(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MulParam::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 height_A = 1;
  if (has_height_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->height_a(), target);
  }

  // optional int32 width_A = 2;
  if (has_width_a()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width_a(), target);
  }

  // optional int32 height_B = 3;
  if (has_height_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->height_b(), target);
  }

  // optional int32 width_B = 4;
  if (has_width_b()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->width_b(), target);
  }

  // optional int32 channels = 5 [default = 1];
  if (has_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->channels(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MulParam::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 height_A = 1;
    if (has_height_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height_a());
    }

    // optional int32 width_A = 2;
    if (has_width_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width_a());
    }

    // optional int32 height_B = 3;
    if (has_height_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->height_b());
    }

    // optional int32 width_B = 4;
    if (has_width_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->width_b());
    }

    // optional int32 channels = 5 [default = 1];
    if (has_channels()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channels());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MulParam::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MulParam* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MulParam*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MulParam::MergeFrom(const MulParam& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_height_a()) {
      set_height_a(from.height_a());
    }
    if (from.has_width_a()) {
      set_width_a(from.width_a());
    }
    if (from.has_height_b()) {
      set_height_b(from.height_b());
    }
    if (from.has_width_b()) {
      set_width_b(from.width_b());
    }
    if (from.has_channels()) {
      set_channels(from.channels());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MulParam::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MulParam::CopyFrom(const MulParam& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MulParam::IsInitialized() const {

  return true;
}

void MulParam::Swap(MulParam* other) {
  if (other != this) {
    std::swap(height_a_, other->height_a_);
    std::swap(width_a_, other->width_a_);
    std::swap(height_b_, other->height_b_);
    std::swap(width_b_, other->width_b_);
    std::swap(channels_, other->channels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MulParam::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MulParam_descriptor_;
  metadata.reflection = MulParam_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GET

// @@protoc_insertion_point(global_scope)
