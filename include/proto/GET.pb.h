// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GET.proto

#ifndef PROTOBUF_GET_2eproto__INCLUDED
#define PROTOBUF_GET_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace GET {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GET_2eproto();
void protobuf_AssignDesc_GET_2eproto();
void protobuf_ShutdownFile_GET_2eproto();

class TaskParam;
class AddParam;
class SubParam;
class MulParam;

enum TaskParam_DataPosition {
  TaskParam_DataPosition_FILE = 0,
  TaskParam_DataPosition_HOSTMEM = 1
};
bool TaskParam_DataPosition_IsValid(int value);
const TaskParam_DataPosition TaskParam_DataPosition_DataPosition_MIN = TaskParam_DataPosition_FILE;
const TaskParam_DataPosition TaskParam_DataPosition_DataPosition_MAX = TaskParam_DataPosition_HOSTMEM;
const int TaskParam_DataPosition_DataPosition_ARRAYSIZE = TaskParam_DataPosition_DataPosition_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskParam_DataPosition_descriptor();
inline const ::std::string& TaskParam_DataPosition_Name(TaskParam_DataPosition value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskParam_DataPosition_descriptor(), value);
}
inline bool TaskParam_DataPosition_Parse(
    const ::std::string& name, TaskParam_DataPosition* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskParam_DataPosition>(
    TaskParam_DataPosition_descriptor(), name, value);
}
enum TaskParam_TaskType {
  TaskParam_TaskType_ADD = 0,
  TaskParam_TaskType_SUB = 1,
  TaskParam_TaskType_MULTI = 2,
  TaskParam_TaskType_CONVOLUTION = 3,
  TaskParam_TaskType_POOLING = 4
};
bool TaskParam_TaskType_IsValid(int value);
const TaskParam_TaskType TaskParam_TaskType_TaskType_MIN = TaskParam_TaskType_ADD;
const TaskParam_TaskType TaskParam_TaskType_TaskType_MAX = TaskParam_TaskType_POOLING;
const int TaskParam_TaskType_TaskType_ARRAYSIZE = TaskParam_TaskType_TaskType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TaskParam_TaskType_descriptor();
inline const ::std::string& TaskParam_TaskType_Name(TaskParam_TaskType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TaskParam_TaskType_descriptor(), value);
}
inline bool TaskParam_TaskType_Parse(
    const ::std::string& name, TaskParam_TaskType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TaskParam_TaskType>(
    TaskParam_TaskType_descriptor(), name, value);
}
// ===================================================================

class TaskParam : public ::google::protobuf::Message {
 public:
  TaskParam();
  virtual ~TaskParam();

  TaskParam(const TaskParam& from);

  inline TaskParam& operator=(const TaskParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskParam& default_instance();

  void Swap(TaskParam* other);

  // implements Message ----------------------------------------------

  TaskParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskParam& from);
  void MergeFrom(const TaskParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TaskParam_DataPosition DataPosition;
  static const DataPosition FILE = TaskParam_DataPosition_FILE;
  static const DataPosition HOSTMEM = TaskParam_DataPosition_HOSTMEM;
  static inline bool DataPosition_IsValid(int value) {
    return TaskParam_DataPosition_IsValid(value);
  }
  static const DataPosition DataPosition_MIN =
    TaskParam_DataPosition_DataPosition_MIN;
  static const DataPosition DataPosition_MAX =
    TaskParam_DataPosition_DataPosition_MAX;
  static const int DataPosition_ARRAYSIZE =
    TaskParam_DataPosition_DataPosition_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataPosition_descriptor() {
    return TaskParam_DataPosition_descriptor();
  }
  static inline const ::std::string& DataPosition_Name(DataPosition value) {
    return TaskParam_DataPosition_Name(value);
  }
  static inline bool DataPosition_Parse(const ::std::string& name,
      DataPosition* value) {
    return TaskParam_DataPosition_Parse(name, value);
  }

  typedef TaskParam_TaskType TaskType;
  static const TaskType ADD = TaskParam_TaskType_ADD;
  static const TaskType SUB = TaskParam_TaskType_SUB;
  static const TaskType MULTI = TaskParam_TaskType_MULTI;
  static const TaskType CONVOLUTION = TaskParam_TaskType_CONVOLUTION;
  static const TaskType POOLING = TaskParam_TaskType_POOLING;
  static inline bool TaskType_IsValid(int value) {
    return TaskParam_TaskType_IsValid(value);
  }
  static const TaskType TaskType_MIN =
    TaskParam_TaskType_TaskType_MIN;
  static const TaskType TaskType_MAX =
    TaskParam_TaskType_TaskType_MAX;
  static const int TaskType_ARRAYSIZE =
    TaskParam_TaskType_TaskType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  TaskType_descriptor() {
    return TaskParam_TaskType_descriptor();
  }
  static inline const ::std::string& TaskType_Name(TaskType value) {
    return TaskParam_TaskType_Name(value);
  }
  static inline bool TaskType_Parse(const ::std::string& name,
      TaskType* value) {
    return TaskParam_TaskType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
  inline bool has_source_pos() const;
  inline void clear_source_pos();
  static const int kSourcePosFieldNumber = 1;
  inline ::GET::TaskParam_DataPosition source_pos() const;
  inline void set_source_pos(::GET::TaskParam_DataPosition value);

  // repeated string sourcef = 2;
  inline int sourcef_size() const;
  inline void clear_sourcef();
  static const int kSourcefFieldNumber = 2;
  inline const ::std::string& sourcef(int index) const;
  inline ::std::string* mutable_sourcef(int index);
  inline void set_sourcef(int index, const ::std::string& value);
  inline void set_sourcef(int index, const char* value);
  inline void set_sourcef(int index, const char* value, size_t size);
  inline ::std::string* add_sourcef();
  inline void add_sourcef(const ::std::string& value);
  inline void add_sourcef(const char* value);
  inline void add_sourcef(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& sourcef() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sourcef();

  // repeated uint64 sourcem = 3;
  inline int sourcem_size() const;
  inline void clear_sourcem();
  static const int kSourcemFieldNumber = 3;
  inline ::google::protobuf::uint64 sourcem(int index) const;
  inline void set_sourcem(int index, ::google::protobuf::uint64 value);
  inline void add_sourcem(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      sourcem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_sourcem();

  // optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
  inline bool has_result_pos() const;
  inline void clear_result_pos();
  static const int kResultPosFieldNumber = 4;
  inline ::GET::TaskParam_DataPosition result_pos() const;
  inline void set_result_pos(::GET::TaskParam_DataPosition value);

  // repeated string resultf = 5;
  inline int resultf_size() const;
  inline void clear_resultf();
  static const int kResultfFieldNumber = 5;
  inline const ::std::string& resultf(int index) const;
  inline ::std::string* mutable_resultf(int index);
  inline void set_resultf(int index, const ::std::string& value);
  inline void set_resultf(int index, const char* value);
  inline void set_resultf(int index, const char* value, size_t size);
  inline ::std::string* add_resultf();
  inline void add_resultf(const ::std::string& value);
  inline void add_resultf(const char* value);
  inline void add_resultf(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& resultf() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_resultf();

  // repeated uint64 resultm = 6;
  inline int resultm_size() const;
  inline void clear_resultm();
  static const int kResultmFieldNumber = 6;
  inline ::google::protobuf::uint64 resultm(int index) const;
  inline void set_resultm(int index, ::google::protobuf::uint64 value);
  inline void add_resultm(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      resultm() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_resultm();

  // optional .GET.TaskParam.TaskType type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::GET::TaskParam_TaskType type() const;
  inline void set_type(::GET::TaskParam_TaskType value);

  // optional .GET.AddParam add_param = 8;
  inline bool has_add_param() const;
  inline void clear_add_param();
  static const int kAddParamFieldNumber = 8;
  inline const ::GET::AddParam& add_param() const;
  inline ::GET::AddParam* mutable_add_param();
  inline ::GET::AddParam* release_add_param();
  inline void set_allocated_add_param(::GET::AddParam* add_param);

  // optional .GET.SubParam sub_param = 9;
  inline bool has_sub_param() const;
  inline void clear_sub_param();
  static const int kSubParamFieldNumber = 9;
  inline const ::GET::SubParam& sub_param() const;
  inline ::GET::SubParam* mutable_sub_param();
  inline ::GET::SubParam* release_sub_param();
  inline void set_allocated_sub_param(::GET::SubParam* sub_param);

  // optional .GET.MulParam mul_param = 10;
  inline bool has_mul_param() const;
  inline void clear_mul_param();
  static const int kMulParamFieldNumber = 10;
  inline const ::GET::MulParam& mul_param() const;
  inline ::GET::MulParam* mutable_mul_param();
  inline ::GET::MulParam* release_mul_param();
  inline void set_allocated_mul_param(::GET::MulParam* mul_param);

  // @@protoc_insertion_point(class_scope:GET.TaskParam)
 private:
  inline void set_has_source_pos();
  inline void clear_has_source_pos();
  inline void set_has_result_pos();
  inline void clear_has_result_pos();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_add_param();
  inline void clear_has_add_param();
  inline void set_has_sub_param();
  inline void clear_has_sub_param();
  inline void set_has_mul_param();
  inline void clear_has_mul_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> sourcef_;
  int source_pos_;
  int result_pos_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > sourcem_;
  ::google::protobuf::RepeatedPtrField< ::std::string> resultf_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > resultm_;
  ::GET::AddParam* add_param_;
  ::GET::SubParam* sub_param_;
  ::GET::MulParam* mul_param_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_GET_2eproto();
  friend void protobuf_AssignDesc_GET_2eproto();
  friend void protobuf_ShutdownFile_GET_2eproto();

  void InitAsDefaultInstance();
  static TaskParam* default_instance_;
};
// -------------------------------------------------------------------

class AddParam : public ::google::protobuf::Message {
 public:
  AddParam();
  virtual ~AddParam();

  AddParam(const AddParam& from);

  inline AddParam& operator=(const AddParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddParam& default_instance();

  void Swap(AddParam* other);

  // implements Message ----------------------------------------------

  AddParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddParam& from);
  void MergeFrom(const AddParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 height = 1;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 1;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 channels = 3 [default = 1];
  inline bool has_channels() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 3;
  inline ::google::protobuf::int32 channels() const;
  inline void set_channels(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GET.AddParam)
 private:
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_channels();
  inline void clear_has_channels();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 channels_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GET_2eproto();
  friend void protobuf_AssignDesc_GET_2eproto();
  friend void protobuf_ShutdownFile_GET_2eproto();

  void InitAsDefaultInstance();
  static AddParam* default_instance_;
};
// -------------------------------------------------------------------

class SubParam : public ::google::protobuf::Message {
 public:
  SubParam();
  virtual ~SubParam();

  SubParam(const SubParam& from);

  inline SubParam& operator=(const SubParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubParam& default_instance();

  void Swap(SubParam* other);

  // implements Message ----------------------------------------------

  SubParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubParam& from);
  void MergeFrom(const SubParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 height = 1;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 1;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);

  // optional int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);

  // optional int32 channels = 3 [default = 1];
  inline bool has_channels() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 3;
  inline ::google::protobuf::int32 channels() const;
  inline void set_channels(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GET.SubParam)
 private:
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_channels();
  inline void clear_has_channels();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 channels_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_GET_2eproto();
  friend void protobuf_AssignDesc_GET_2eproto();
  friend void protobuf_ShutdownFile_GET_2eproto();

  void InitAsDefaultInstance();
  static SubParam* default_instance_;
};
// -------------------------------------------------------------------

class MulParam : public ::google::protobuf::Message {
 public:
  MulParam();
  virtual ~MulParam();

  MulParam(const MulParam& from);

  inline MulParam& operator=(const MulParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MulParam& default_instance();

  void Swap(MulParam* other);

  // implements Message ----------------------------------------------

  MulParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MulParam& from);
  void MergeFrom(const MulParam& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 height_A = 1;
  inline bool has_height_a() const;
  inline void clear_height_a();
  static const int kHeightAFieldNumber = 1;
  inline ::google::protobuf::int32 height_a() const;
  inline void set_height_a(::google::protobuf::int32 value);

  // optional int32 width_A = 2;
  inline bool has_width_a() const;
  inline void clear_width_a();
  static const int kWidthAFieldNumber = 2;
  inline ::google::protobuf::int32 width_a() const;
  inline void set_width_a(::google::protobuf::int32 value);

  // optional int32 height_B = 3;
  inline bool has_height_b() const;
  inline void clear_height_b();
  static const int kHeightBFieldNumber = 3;
  inline ::google::protobuf::int32 height_b() const;
  inline void set_height_b(::google::protobuf::int32 value);

  // optional int32 width_B = 4;
  inline bool has_width_b() const;
  inline void clear_width_b();
  static const int kWidthBFieldNumber = 4;
  inline ::google::protobuf::int32 width_b() const;
  inline void set_width_b(::google::protobuf::int32 value);

  // optional int32 channels = 5 [default = 1];
  inline bool has_channels() const;
  inline void clear_channels();
  static const int kChannelsFieldNumber = 5;
  inline ::google::protobuf::int32 channels() const;
  inline void set_channels(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GET.MulParam)
 private:
  inline void set_has_height_a();
  inline void clear_has_height_a();
  inline void set_has_width_a();
  inline void clear_has_width_a();
  inline void set_has_height_b();
  inline void clear_has_height_b();
  inline void set_has_width_b();
  inline void clear_has_width_b();
  inline void set_has_channels();
  inline void clear_has_channels();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 height_a_;
  ::google::protobuf::int32 width_a_;
  ::google::protobuf::int32 height_b_;
  ::google::protobuf::int32 width_b_;
  ::google::protobuf::int32 channels_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_GET_2eproto();
  friend void protobuf_AssignDesc_GET_2eproto();
  friend void protobuf_ShutdownFile_GET_2eproto();

  void InitAsDefaultInstance();
  static MulParam* default_instance_;
};
// ===================================================================


// ===================================================================

// TaskParam

// optional .GET.TaskParam.DataPosition source_pos = 1 [default = HOSTMEM];
inline bool TaskParam::has_source_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TaskParam::set_has_source_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TaskParam::clear_has_source_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TaskParam::clear_source_pos() {
  source_pos_ = 1;
  clear_has_source_pos();
}
inline ::GET::TaskParam_DataPosition TaskParam::source_pos() const {
  return static_cast< ::GET::TaskParam_DataPosition >(source_pos_);
}
inline void TaskParam::set_source_pos(::GET::TaskParam_DataPosition value) {
  assert(::GET::TaskParam_DataPosition_IsValid(value));
  set_has_source_pos();
  source_pos_ = value;
}

// repeated string sourcef = 2;
inline int TaskParam::sourcef_size() const {
  return sourcef_.size();
}
inline void TaskParam::clear_sourcef() {
  sourcef_.Clear();
}
inline const ::std::string& TaskParam::sourcef(int index) const {
  return sourcef_.Get(index);
}
inline ::std::string* TaskParam::mutable_sourcef(int index) {
  return sourcef_.Mutable(index);
}
inline void TaskParam::set_sourcef(int index, const ::std::string& value) {
  sourcef_.Mutable(index)->assign(value);
}
inline void TaskParam::set_sourcef(int index, const char* value) {
  sourcef_.Mutable(index)->assign(value);
}
inline void TaskParam::set_sourcef(int index, const char* value, size_t size) {
  sourcef_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TaskParam::add_sourcef() {
  return sourcef_.Add();
}
inline void TaskParam::add_sourcef(const ::std::string& value) {
  sourcef_.Add()->assign(value);
}
inline void TaskParam::add_sourcef(const char* value) {
  sourcef_.Add()->assign(value);
}
inline void TaskParam::add_sourcef(const char* value, size_t size) {
  sourcef_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TaskParam::sourcef() const {
  return sourcef_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TaskParam::mutable_sourcef() {
  return &sourcef_;
}

// repeated uint64 sourcem = 3;
inline int TaskParam::sourcem_size() const {
  return sourcem_.size();
}
inline void TaskParam::clear_sourcem() {
  sourcem_.Clear();
}
inline ::google::protobuf::uint64 TaskParam::sourcem(int index) const {
  return sourcem_.Get(index);
}
inline void TaskParam::set_sourcem(int index, ::google::protobuf::uint64 value) {
  sourcem_.Set(index, value);
}
inline void TaskParam::add_sourcem(::google::protobuf::uint64 value) {
  sourcem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TaskParam::sourcem() const {
  return sourcem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TaskParam::mutable_sourcem() {
  return &sourcem_;
}

// optional .GET.TaskParam.DataPosition result_pos = 4 [default = HOSTMEM];
inline bool TaskParam::has_result_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TaskParam::set_has_result_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TaskParam::clear_has_result_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TaskParam::clear_result_pos() {
  result_pos_ = 1;
  clear_has_result_pos();
}
inline ::GET::TaskParam_DataPosition TaskParam::result_pos() const {
  return static_cast< ::GET::TaskParam_DataPosition >(result_pos_);
}
inline void TaskParam::set_result_pos(::GET::TaskParam_DataPosition value) {
  assert(::GET::TaskParam_DataPosition_IsValid(value));
  set_has_result_pos();
  result_pos_ = value;
}

// repeated string resultf = 5;
inline int TaskParam::resultf_size() const {
  return resultf_.size();
}
inline void TaskParam::clear_resultf() {
  resultf_.Clear();
}
inline const ::std::string& TaskParam::resultf(int index) const {
  return resultf_.Get(index);
}
inline ::std::string* TaskParam::mutable_resultf(int index) {
  return resultf_.Mutable(index);
}
inline void TaskParam::set_resultf(int index, const ::std::string& value) {
  resultf_.Mutable(index)->assign(value);
}
inline void TaskParam::set_resultf(int index, const char* value) {
  resultf_.Mutable(index)->assign(value);
}
inline void TaskParam::set_resultf(int index, const char* value, size_t size) {
  resultf_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TaskParam::add_resultf() {
  return resultf_.Add();
}
inline void TaskParam::add_resultf(const ::std::string& value) {
  resultf_.Add()->assign(value);
}
inline void TaskParam::add_resultf(const char* value) {
  resultf_.Add()->assign(value);
}
inline void TaskParam::add_resultf(const char* value, size_t size) {
  resultf_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TaskParam::resultf() const {
  return resultf_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TaskParam::mutable_resultf() {
  return &resultf_;
}

// repeated uint64 resultm = 6;
inline int TaskParam::resultm_size() const {
  return resultm_.size();
}
inline void TaskParam::clear_resultm() {
  resultm_.Clear();
}
inline ::google::protobuf::uint64 TaskParam::resultm(int index) const {
  return resultm_.Get(index);
}
inline void TaskParam::set_resultm(int index, ::google::protobuf::uint64 value) {
  resultm_.Set(index, value);
}
inline void TaskParam::add_resultm(::google::protobuf::uint64 value) {
  resultm_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TaskParam::resultm() const {
  return resultm_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TaskParam::mutable_resultm() {
  return &resultm_;
}

// optional .GET.TaskParam.TaskType type = 7;
inline bool TaskParam::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TaskParam::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TaskParam::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TaskParam::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GET::TaskParam_TaskType TaskParam::type() const {
  return static_cast< ::GET::TaskParam_TaskType >(type_);
}
inline void TaskParam::set_type(::GET::TaskParam_TaskType value) {
  assert(::GET::TaskParam_TaskType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .GET.AddParam add_param = 8;
inline bool TaskParam::has_add_param() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TaskParam::set_has_add_param() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TaskParam::clear_has_add_param() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TaskParam::clear_add_param() {
  if (add_param_ != NULL) add_param_->::GET::AddParam::Clear();
  clear_has_add_param();
}
inline const ::GET::AddParam& TaskParam::add_param() const {
  return add_param_ != NULL ? *add_param_ : *default_instance_->add_param_;
}
inline ::GET::AddParam* TaskParam::mutable_add_param() {
  set_has_add_param();
  if (add_param_ == NULL) add_param_ = new ::GET::AddParam;
  return add_param_;
}
inline ::GET::AddParam* TaskParam::release_add_param() {
  clear_has_add_param();
  ::GET::AddParam* temp = add_param_;
  add_param_ = NULL;
  return temp;
}
inline void TaskParam::set_allocated_add_param(::GET::AddParam* add_param) {
  delete add_param_;
  add_param_ = add_param;
  if (add_param) {
    set_has_add_param();
  } else {
    clear_has_add_param();
  }
}

// optional .GET.SubParam sub_param = 9;
inline bool TaskParam::has_sub_param() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TaskParam::set_has_sub_param() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TaskParam::clear_has_sub_param() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TaskParam::clear_sub_param() {
  if (sub_param_ != NULL) sub_param_->::GET::SubParam::Clear();
  clear_has_sub_param();
}
inline const ::GET::SubParam& TaskParam::sub_param() const {
  return sub_param_ != NULL ? *sub_param_ : *default_instance_->sub_param_;
}
inline ::GET::SubParam* TaskParam::mutable_sub_param() {
  set_has_sub_param();
  if (sub_param_ == NULL) sub_param_ = new ::GET::SubParam;
  return sub_param_;
}
inline ::GET::SubParam* TaskParam::release_sub_param() {
  clear_has_sub_param();
  ::GET::SubParam* temp = sub_param_;
  sub_param_ = NULL;
  return temp;
}
inline void TaskParam::set_allocated_sub_param(::GET::SubParam* sub_param) {
  delete sub_param_;
  sub_param_ = sub_param;
  if (sub_param) {
    set_has_sub_param();
  } else {
    clear_has_sub_param();
  }
}

// optional .GET.MulParam mul_param = 10;
inline bool TaskParam::has_mul_param() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void TaskParam::set_has_mul_param() {
  _has_bits_[0] |= 0x00000200u;
}
inline void TaskParam::clear_has_mul_param() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void TaskParam::clear_mul_param() {
  if (mul_param_ != NULL) mul_param_->::GET::MulParam::Clear();
  clear_has_mul_param();
}
inline const ::GET::MulParam& TaskParam::mul_param() const {
  return mul_param_ != NULL ? *mul_param_ : *default_instance_->mul_param_;
}
inline ::GET::MulParam* TaskParam::mutable_mul_param() {
  set_has_mul_param();
  if (mul_param_ == NULL) mul_param_ = new ::GET::MulParam;
  return mul_param_;
}
inline ::GET::MulParam* TaskParam::release_mul_param() {
  clear_has_mul_param();
  ::GET::MulParam* temp = mul_param_;
  mul_param_ = NULL;
  return temp;
}
inline void TaskParam::set_allocated_mul_param(::GET::MulParam* mul_param) {
  delete mul_param_;
  mul_param_ = mul_param;
  if (mul_param) {
    set_has_mul_param();
  } else {
    clear_has_mul_param();
  }
}

// -------------------------------------------------------------------

// AddParam

// optional int32 height = 1;
inline bool AddParam::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddParam::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddParam::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddParam::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 AddParam::height() const {
  return height_;
}
inline void AddParam::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional int32 width = 2;
inline bool AddParam::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddParam::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddParam::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddParam::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 AddParam::width() const {
  return width_;
}
inline void AddParam::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// optional int32 channels = 3 [default = 1];
inline bool AddParam::has_channels() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddParam::set_has_channels() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddParam::clear_has_channels() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddParam::clear_channels() {
  channels_ = 1;
  clear_has_channels();
}
inline ::google::protobuf::int32 AddParam::channels() const {
  return channels_;
}
inline void AddParam::set_channels(::google::protobuf::int32 value) {
  set_has_channels();
  channels_ = value;
}

// -------------------------------------------------------------------

// SubParam

// optional int32 height = 1;
inline bool SubParam::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubParam::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubParam::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubParam::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 SubParam::height() const {
  return height_;
}
inline void SubParam::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional int32 width = 2;
inline bool SubParam::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubParam::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubParam::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubParam::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 SubParam::width() const {
  return width_;
}
inline void SubParam::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// optional int32 channels = 3 [default = 1];
inline bool SubParam::has_channels() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubParam::set_has_channels() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubParam::clear_has_channels() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubParam::clear_channels() {
  channels_ = 1;
  clear_has_channels();
}
inline ::google::protobuf::int32 SubParam::channels() const {
  return channels_;
}
inline void SubParam::set_channels(::google::protobuf::int32 value) {
  set_has_channels();
  channels_ = value;
}

// -------------------------------------------------------------------

// MulParam

// optional int32 height_A = 1;
inline bool MulParam::has_height_a() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MulParam::set_has_height_a() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MulParam::clear_has_height_a() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MulParam::clear_height_a() {
  height_a_ = 0;
  clear_has_height_a();
}
inline ::google::protobuf::int32 MulParam::height_a() const {
  return height_a_;
}
inline void MulParam::set_height_a(::google::protobuf::int32 value) {
  set_has_height_a();
  height_a_ = value;
}

// optional int32 width_A = 2;
inline bool MulParam::has_width_a() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MulParam::set_has_width_a() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MulParam::clear_has_width_a() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MulParam::clear_width_a() {
  width_a_ = 0;
  clear_has_width_a();
}
inline ::google::protobuf::int32 MulParam::width_a() const {
  return width_a_;
}
inline void MulParam::set_width_a(::google::protobuf::int32 value) {
  set_has_width_a();
  width_a_ = value;
}

// optional int32 height_B = 3;
inline bool MulParam::has_height_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MulParam::set_has_height_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MulParam::clear_has_height_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MulParam::clear_height_b() {
  height_b_ = 0;
  clear_has_height_b();
}
inline ::google::protobuf::int32 MulParam::height_b() const {
  return height_b_;
}
inline void MulParam::set_height_b(::google::protobuf::int32 value) {
  set_has_height_b();
  height_b_ = value;
}

// optional int32 width_B = 4;
inline bool MulParam::has_width_b() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MulParam::set_has_width_b() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MulParam::clear_has_width_b() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MulParam::clear_width_b() {
  width_b_ = 0;
  clear_has_width_b();
}
inline ::google::protobuf::int32 MulParam::width_b() const {
  return width_b_;
}
inline void MulParam::set_width_b(::google::protobuf::int32 value) {
  set_has_width_b();
  width_b_ = value;
}

// optional int32 channels = 5 [default = 1];
inline bool MulParam::has_channels() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MulParam::set_has_channels() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MulParam::clear_has_channels() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MulParam::clear_channels() {
  channels_ = 1;
  clear_has_channels();
}
inline ::google::protobuf::int32 MulParam::channels() const {
  return channels_;
}
inline void MulParam::set_channels(::google::protobuf::int32 value) {
  set_has_channels();
  channels_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GET

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GET::TaskParam_DataPosition>() {
  return ::GET::TaskParam_DataPosition_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GET::TaskParam_TaskType>() {
  return ::GET::TaskParam_TaskType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GET_2eproto__INCLUDED
